/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/bt.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC   |  1  |  2  |  3   |  4   |  5   |                    |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB   |  Q  |  W  |  E   |  R   |  T   |                    |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL  |  A  |  S  |  D   |  F   |  G   |                    |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT  |  Z  |  X  |  C   |  V   |  B   |                    |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            // |    2   |  2  | f   | 6    | 4    | 1    |                    | 2    | 1     | w     | s    | n     |  a    |

            bindings = <
           &kp ESC          &kp F1          &kp F2       &kp F3            &kp F4       &kp F6           &kp F7             &kp F8       &kp F9      &kp F10             &kp F11      &kp RG(B)
           &kp TAB           &kp Q           &kp W        &kp E             &kp R        &kp T            &kp Y              &kp U        &kp I        &kp O               &kp P     &kp RS(F6)
          &kp CAPS  &mt LEFT_GUI A  &mt LEFT_ALT S  &mt LCTRL D  &mt LEFT_SHIFT F        &kp G            &kp H  &mt RIGHT_SHIFT J  &mt RCTRL K  &mt RIGHT_ALT L  &mt RIGHT_GUI APOS  &kp LA(LS(L))
 &kp LS(LC(ENTER))           &kp Z           &kp X        &kp C             &kp V        &kp B            &kp N              &kp M    &kp COMMA      &kp DOT            &kp FSLH      &kp LC(T)
           &kp ESC       &lt 3 TAB       &lt 3 TAB      &kp ESC       &lt 4 SPACE  &lt 4 SPACE  &lt 1 BACKSPACE    &lt 1 BACKSPACE      &kp DEL  &lt 2 ENTER         &lt 2 ENTER        &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        number_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |                   |      |  _    |  +    |  {   |   }   |  "|"  |
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |

            bindings = <
 &ext_power EP_ON  &ext_power EP_OFF  &ext_power EP_TOG   &trans        &trans             &trans  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
           &trans   &kp LEFT_BRACKET             &kp N7   &kp N8        &kp N9  &kp RIGHT_BRACKET      &trans        &trans        &trans        &trans        &trans        &trans
           &trans           &kp SEMI             &kp N4   &kp N5        &kp N6          &kp EQUAL      &trans        &trans        &trans        &trans        &trans        &trans
           &trans          &kp GRAVE             &kp N1   &kp N2        &kp N3      &kp BACKSLASH      &trans        &trans        &trans        &trans        &trans        &trans
          &kp DOT          &kp MINUS          &kp MINUS  &kp DOT  &kp NUMBER_0             &kp N0      &trans        &trans        &trans        &trans        &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        sym_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |		             |  +   |   -   |   =   |  [   |   ]   |   \   |
            // |     |     |      |      |      |        |                   |       |      |       |       |      |       |

            bindings = <
               &trans          &trans      &trans                &trans                 &trans                 &trans  &trans  &trans  &trans  &trans  &trans  &bootloader
               &trans  &kp LEFT_BRACE    &kp AMPS              &kp STAR   &kp LEFT_PARENTHESIS        &kp RIGHT_BRACE  &trans  &trans  &trans  &trans  &trans       &trans
               &trans       &kp COLON  &kp DOLLAR           &kp PERCENT              &kp CARET               &kp PLUS  &trans  &trans  &trans  &trans  &trans       &trans
               &trans       &kp TILDE    &kp EXCL                &kp AT              &kp POUND               &kp PIPE  &trans  &trans  &trans  &trans  &trans       &trans
 &kp LEFT_PARENTHESIS       &kp UNDER   &kp UNDER  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans  &trans  &trans  &trans  &trans       &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        refactor {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans  &trans         &trans         &trans         &trans  &trans  &kp LA(F7)
 &trans  &trans  &trans  &trans  &trans  &trans  &trans     &kp LG(F6)  &kp LA(LG(M))  &kp LA(LG(V))  &trans      &trans
 &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp LA(LG(C))  &kp LA(LG(P))  &kp LA(LG(F))  &trans      &trans
 &trans  &trans  &trans  &trans  &trans  &trans  &trans         &trans  &kp LA(LG(N))         &trans  &trans      &trans
 &trans  &trans  &trans  &trans  &trans  &trans  &trans         &trans         &trans         &trans  &trans      &trans
            >;
        };

        navigation {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans      &trans       &trans         &trans       &trans      &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans  &kp K_REDO  &kp K_PASTE     &kp K_COPY    &kp K_CUT  &kp K_UNDO  &trans
 &trans  &trans  &trans  &trans  &trans  &trans    &kp CAPS     &kp LEFT       &kp DOWN       &kp UP   &kp RIGHT  &trans
 &trans  &trans  &trans  &trans  &trans  &trans  &kp INSERT     &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP     &kp END  &trans
 &trans  &trans  &trans  &trans  &trans  &trans      &trans       &trans         &trans       &trans      &trans  &trans
            >;
        };
    };
};
